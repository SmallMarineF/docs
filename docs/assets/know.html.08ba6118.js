import{_ as i,g as p,o as u,c as r,b as n,h as a,w as t,F as k,i as s,f as o}from"./app.5316fa52.js";const d={},b={id:"\u5165\u95E8",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#\u5165\u95E8","aria-hidden":"true"},"#",-1),h=s(),g={href:"http://nodejs.cn/api/",target:"_blank",rel:"noopener noreferrer"},f=s("\u5165\u95E8"),v=o(`<h2 id="\u4E8B\u4EF6\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u5FAA\u73AF" aria-hidden="true">#</a> \u4E8B\u4EF6\u5FAA\u73AF</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">baz</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;baz&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>

	<span class="token function">setTimeout</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

	<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u5E94\u8BE5\u5728baz\u4E4B\u540E\uFF0Cbar\u4E4B\u524D&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">d</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// foo</span>
<span class="token comment">// baz</span>
<span class="token comment">// \u5E94\u8BE5\u5728baz\u4E4B\u540E\uFF0Cbar\u4E4B\u524D</span>
<span class="token comment">// bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="process-nexttick" tabindex="-1"><a class="header-anchor" href="#process-nexttick" aria-hidden="true">#</a> process.nextTick()</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 3 2 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="setimmediate" tabindex="-1"><a class="header-anchor" href="#setimmediate" aria-hidden="true">#</a> setImmediate()</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setImmediate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u5B9A\u65F6\u5668" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u65F6\u5668" aria-hidden="true">#</a> \u5B9A\u65F6\u5668</h2><h3 id="settimeout" tabindex="-1"><a class="header-anchor" href="#settimeout" aria-hidden="true">#</a> setTimeout()</h3><p>\u5EF6\u8FDF\u51FD\u6570\u7684\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5EF6\u8FDF2\u79D2</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u5EF6\u8FDF\u4E24\u79D2</span>
<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token comment">// \u6E05\u9664</span>
<span class="token function">clearTimeout</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="setinterval" tabindex="-1"><a class="header-anchor" href="#setinterval" aria-hidden="true">#</a> setInterval()</h3><p>\u5728\u6307\u5B9A\u7684\u7279\u5B9A\u65F6\u95F4\u95F4\u9694\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\u4E00\u76F4\u5730\u8FD0\u884C\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BCF\u4E24\u79D2\u6267\u884C\u4E00\u6B21</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>

<span class="token comment">// \u6E05\u9664</span>
<span class="token function">clearInterval</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u9012\u5F52\u7684-settimeout" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u7684-settimeout" aria-hidden="true">#</a> \u9012\u5F52\u7684 setTimeout</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u4E8B\u4EF6\u89E6\u53D1\u5668" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u89E6\u53D1\u5668" aria-hidden="true">#</a> \u4E8B\u4EF6\u89E6\u53D1\u5668</h2><ul><li>once(): \u6DFB\u52A0\u5355\u6B21\u76D1\u542C\u5668\u3002</li><li>removeListener() / off(): \u4ECE\u4E8B\u4EF6\u4E2D\u79FB\u9664\u4E8B\u4EF6\u76D1\u542C\u5668\u3002</li><li>removeAllListeners(): \u79FB\u9664\u4E8B\u4EF6\u7684\u6240\u6709\u76D1\u542C\u5668\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> EventEmitter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> eventEitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

eventEitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">,</span> <span class="token parameter">d</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB&#39;</span><span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

eventEitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> http</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span>
	res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">)</span>
	res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u670D\u52A1\u5668\u8FD0\u884C\u5728 http://localhost/:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53D1\u9001http post\u8BF7\u6C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> https <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;https&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">todo</span><span class="token operator">:</span> <span class="token string">&#39;\u505A\u70B9\u4E8B\u60C5&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&#39;nodejs.cn&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">443</span><span class="token punctuation">,</span>
	<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/todos&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;Content-Length&#39;</span><span class="token operator">:</span> data<span class="token punctuation">.</span>length
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> req <span class="token operator">=</span> https<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u72B6\u6001\u7801: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token punctuation">.</span>statusCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">d</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

req<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u8BF7\u6C42\u7684\u6B63\u6587\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u53EF\u7528\u7684\u6570\u636E\u5757: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chunk<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		req<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span>
		res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">)</span>
		res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		req<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span>
		res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">)</span>
		res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u670D\u52A1\u5668\u8FD0\u884C\u5728 http://localhost/:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6" aria-hidden="true">#</a> \u6587\u4EF6</h2><ul><li>r+ \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u8BFB\u5199\u3002</li><li>w+ \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u8BFB\u5199\uFF0C\u5C06\u6D41\u5B9A\u4F4D\u5230\u6587\u4EF6\u7684\u5F00\u5934\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li><li>a \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u5199\u5165\uFF0C\u5C06\u6D41\u5B9A\u4F4D\u5230\u6587\u4EF6\u7684\u672B\u5C3E\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li><li>a+ \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u8BFB\u5199\uFF0C\u5C06\u6D41\u5B9A\u4F4D\u5230\u6587\u4EF6\u7684\u672B\u5C3E\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// fs.openSync \u540C\u6B65</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./share.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> fd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u6587\u4EF6\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u5C5E\u6027" aria-hidden="true">#</a> \u6587\u4EF6\u5C5E\u6027</h3><ul><li>\u4F7F\u7528 stats.isFile() \u548C stats.isDirectory() \u5224\u65AD\u6587\u4EF6\u662F\u5426\u76EE\u5F55\u6216\u6587\u4EF6\u3002</li><li>\u4F7F\u7528 stats.isSymbolicLink() \u5224\u65AD\u6587\u4EF6\u662F\u5426\u7B26\u53F7\u94FE\u63A5\u3002</li><li>\u4F7F\u7528 stats.size \u83B7\u53D6\u6587\u4EF6\u7684\u5927\u5C0F\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// fs.statSync \u540C\u6B65</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span><span class="token string">&#39;./share.html&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stats</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u6587\u4EF6\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8DEF\u5F84" aria-hidden="true">#</a> \u6587\u4EF6\u8DEF\u5F84</h3><ul><li>dirname: \u83B7\u53D6\u6587\u4EF6\u7684\u7236\u6587\u4EF6\u5939\u3002</li><li>basename: \u83B7\u53D6\u6587\u4EF6\u540D\u90E8\u5206\u3002</li><li>extname: \u83B7\u53D6\u6587\u4EF6\u7684\u6269\u5C55\u540D\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> notes <span class="token operator">=</span> <span class="token string">&#39;/users/mkimq/notes.txt&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>notes<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>notes<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>notes<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u901A\u8FC7\u4E3A basename \u6307\u5B9A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6765\u83B7\u53D6\u4E0D\u5E26\u6269\u5C55\u540D\u7684\u6587\u4EF6\u540D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>notes<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>notes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u4F7F\u7528\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u8DEF\u5F84" aria-hidden="true">#</a> \u4F7F\u7528\u8DEF\u5F84</h3><p>\u53EF\u4EE5\u4F7F\u7528 path.join() \u8FDE\u63A5\u8DEF\u5F84\u7684\u4E24\u4E2A\u6216\u591A\u4E2A\u7247\u6BB5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;notes.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F7F\u7528 path.resolve() \u83B7\u5F97\u76F8\u5BF9\u8DEF\u5F84\u7684\u7EDD\u5BF9\u8DEF\u5F84\u8BA1\u7B97\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;notes.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>path.normalize() \u662F\u53E6\u4E00\u4E2A\u6709\u7528\u7684\u51FD\u6570\uFF0C\u5F53\u5305\u542B\u8BF8\u5982 .\u3001.. \u6216\u53CC\u659C\u6760\u4E4B\u7C7B\u7684\u76F8\u5BF9\u8BF4\u660E\u7B26\u65F6\uFF0C\u5176\u4F1A\u5C1D\u8BD5\u8BA1\u7B97\u5B9E\u9645\u7684\u8DEF\u5F84\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token string">&#39;/users/mkimq/..//notes.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u8BFB\u53D6\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u6587\u4EF6" aria-hidden="true">#</a> \u8BFB\u53D6\u6587\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test_js.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u5199\u5165\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5199\u5165\u6587\u4EF6" aria-hidden="true">#</a> \u5199\u5165\u6587\u4EF6</h3><ul><li>r+ \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u8BFB\u5199\u3002</li><li>w+ \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u8BFB\u5199\uFF0C\u5C06\u6D41\u5B9A\u4F4D\u5230\u6587\u4EF6\u7684\u5F00\u5934\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li><li>a \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u5199\u5165\uFF0C\u5C06\u6D41\u5B9A\u4F4D\u5230\u6587\u4EF6\u7684\u672B\u5C3E\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li><li>a+ \u6253\u5F00\u6587\u4EF6\u7528\u4E8E\u8BFB\u5199\uFF0C\u5C06\u6D41\u5B9A\u4F4D\u5230\u6587\u4EF6\u7684\u672B\u5C3E\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>

fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>

fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&#39;a+&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="\u8FFD\u52A0\u5230\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u8FFD\u52A0\u5230\u6587\u4EF6" aria-hidden="true">#</a> \u8FFD\u52A0\u5230\u6587\u4EF6</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token string">&#39;\u8FFD\u52A0\u5185\u5BB9&#39;</span>

fs<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8FFD\u52A0\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u4F7F\u7528\u6587\u4EF6\u5939" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6587\u4EF6\u5939" aria-hidden="true">#</a> \u4F7F\u7528\u6587\u4EF6\u5939</h2><h4 id="\u68C0\u67E5\u6587\u4EF6\u5939\u662F\u5426\u5B58\u5728" tabindex="-1"><a class="header-anchor" href="#\u68C0\u67E5\u6587\u4EF6\u5939\u662F\u5426\u5B58\u5728" aria-hidden="true">#</a> \u68C0\u67E5\u6587\u4EF6\u5939\u662F\u5426\u5B58\u5728</h4><p>\u4F7F\u7528 fs.access() \u68C0\u67E5\u6587\u4EF6\u5939\u662F\u5426\u5B58\u5728\u4EE5\u53CA Node.js \u662F\u5426\u5177\u6709\u8BBF\u95EE\u6743\u9650\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">F_OK</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u521B\u5EFA\u65B0\u7684\u6587\u4EF6\u5939" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u65B0\u7684\u6587\u4EF6\u5939" aria-hidden="true">#</a> \u521B\u5EFA\u65B0\u7684\u6587\u4EF6\u5939</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> folderName <span class="token operator">=</span> <span class="token string">&#39;./test&#39;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>folderName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>folderName<span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6587\u4EF6\u5939\u521B\u5EFA\u6210\u529F&#39;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u8BFB\u53D6\u76EE\u5F55\u7684\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u76EE\u5F55\u7684\u5185\u5BB9" aria-hidden="true">#</a> \u8BFB\u53D6\u76EE\u5F55\u7684\u5185\u5BB9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> folderName <span class="token operator">=</span> <span class="token string">&#39;./test&#39;</span>

fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>folderName<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u91CD\u547D\u540D\u6587\u4EF6\u5939" tabindex="-1"><a class="header-anchor" href="#\u91CD\u547D\u540D\u6587\u4EF6\u5939" aria-hidden="true">#</a> \u91CD\u547D\u540D\u6587\u4EF6\u5939</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> folderName <span class="token operator">=</span> <span class="token string">&#39;./test&#39;</span>

fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>folderName<span class="token punctuation">,</span> <span class="token string">&#39;./new_test&#39;</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u91CD\u547D\u540D\u5B8C\u6210&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u5220\u9664\u6587\u4EF6\u5939" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6587\u4EF6\u5939" aria-hidden="true">#</a> \u5220\u9664\u6587\u4EF6\u5939</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token string">&#39;./new_test&#39;</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5220\u9664\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>fs-extra\u6A21\u5757</p></blockquote><h3 id="\u6587\u4EF6\u7CFB\u7EDF\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u7CFB\u7EDF\u6A21\u5757" aria-hidden="true">#</a> \u6587\u4EF6\u7CFB\u7EDF\u6A21\u5757</h3><ul><li>fs.access(): \u68C0\u67E5\u6587\u4EF6\u662F\u5426\u5B58\u5728\uFF0C\u4EE5\u53CA Node.js \u662F\u5426\u6709\u6743\u9650\u8BBF\u95EE\u3002</li><li>fs.appendFile(): \u8FFD\u52A0\u6570\u636E\u5230\u6587\u4EF6\u3002\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u5219\u521B\u5EFA\u6587\u4EF6\u3002</li><li>fs.chmod(): \u66F4\u6539\u6587\u4EF6\uFF08\u901A\u8FC7\u4F20\u5165\u7684\u6587\u4EF6\u540D\u6307\u5B9A\uFF09\u7684\u6743\u9650\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.lchmod()\u3001fs.fchmod()\u3002</li><li>fs.chown(): \u66F4\u6539\u6587\u4EF6\uFF08\u901A\u8FC7\u4F20\u5165\u7684\u6587\u4EF6\u540D\u6307\u5B9A\uFF09\u7684\u6240\u6709\u8005\u548C\u7FA4\u7EC4\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.fchown()\u3001fs.lchown()\u3002</li><li>fs.close(): \u5173\u95ED\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002</li><li>fs.copyFile(): \u62F7\u8D1D\u6587\u4EF6\u3002</li><li>fs.createReadStream(): \u521B\u5EFA\u53EF\u8BFB\u7684\u6587\u4EF6\u6D41\u3002</li><li>fs.createWriteStream(): \u521B\u5EFA\u53EF\u5199\u7684\u6587\u4EF6\u6D41\u3002</li><li>fs.link(): \u65B0\u5EFA\u6307\u5411\u6587\u4EF6\u7684\u786C\u94FE\u63A5\u3002</li><li>fs.mkdir(): \u65B0\u5EFA\u6587\u4EF6\u5939\u3002</li><li>fs.mkdtemp(): \u521B\u5EFA\u4E34\u65F6\u76EE\u5F55\u3002</li><li>fs.open(): \u8BBE\u7F6E\u6587\u4EF6\u6A21\u5F0F\u3002</li><li>fs.readdir(): \u8BFB\u53D6\u76EE\u5F55\u7684\u5185\u5BB9\u3002</li><li>fs.readFile(): \u8BFB\u53D6\u6587\u4EF6\u7684\u5185\u5BB9\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.read()\u3002</li><li>fs.readlink(): \u8BFB\u53D6\u7B26\u53F7\u94FE\u63A5\u7684\u503C\u3002</li><li>fs.realpath(): \u5C06\u76F8\u5BF9\u7684\u6587\u4EF6\u8DEF\u5F84\u6307\u9488\uFF08.\u3001..\uFF09\u89E3\u6790\u4E3A\u5B8C\u6574\u7684\u8DEF\u5F84\u3002</li><li>fs.rename(): \u91CD\u547D\u540D\u6587\u4EF6\u6216\u6587\u4EF6\u5939\u3002</li><li>fs.rmdir(): \u5220\u9664\u6587\u4EF6\u5939\u3002</li><li>fs.stat(): \u8FD4\u56DE\u6587\u4EF6\uFF08\u901A\u8FC7\u4F20\u5165\u7684\u6587\u4EF6\u540D\u6307\u5B9A\uFF09\u7684\u72B6\u6001\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.fstat()\u3001fs.lstat()\u3002</li><li>fs.symlink(): \u65B0\u5EFA\u6587\u4EF6\u7684\u7B26\u53F7\u94FE\u63A5\u3002</li><li>fs.truncate(): \u5C06\u4F20\u9012\u7684\u6587\u4EF6\u540D\u6807\u8BC6\u7684\u6587\u4EF6\u622A\u65AD\u4E3A\u6307\u5B9A\u7684\u957F\u5EA6\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.ftruncate()\u3002</li><li>fs.unlink(): \u5220\u9664\u6587\u4EF6\u6216\u7B26\u53F7\u94FE\u63A5\u3002</li><li>fs.unwatchFile(): \u505C\u6B62\u76D1\u89C6\u6587\u4EF6\u4E0A\u7684\u66F4\u6539\u3002</li><li>fs.utimes(): \u66F4\u6539\u6587\u4EF6\uFF08\u901A\u8FC7\u4F20\u5165\u7684\u6587\u4EF6\u540D\u6307\u5B9A\uFF09\u7684\u65F6\u95F4\u6233\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.futimes()\u3002</li><li>fs.watchFile(): \u5F00\u59CB\u76D1\u89C6\u6587\u4EF6\u4E0A\u7684\u66F4\u6539\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.watch()\u3002</li><li>fs.writeFile(): \u5C06\u6570\u636E\u5199\u5165\u6587\u4EF6\u3002\u76F8\u5173\u65B9\u6CD5\uFF1Afs.write()\u3002</li></ul><h2 id="\u8DEF\u5F84\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u5F84\u6A21\u5757" aria-hidden="true">#</a> \u8DEF\u5F84\u6A21\u5757</h2><h4 id="path-basename" tabindex="-1"><a class="header-anchor" href="#path-basename" aria-hidden="true">#</a> path.basename()</h4><p>\u8FD4\u56DE\u8DEF\u5F84\u7684\u6700\u540E\u4E00\u90E8\u5206\u3002 \u7B2C\u4E8C\u4E2A\u53C2\u6570\u53EF\u4EE5\u8FC7\u6EE4\u6389\u6587\u4EF6\u7684\u6269\u5C55\u540D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something&#39;</span><span class="token punctuation">)</span> <span class="token comment">//something</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//something.txt</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//something</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="path-dirname" tabindex="-1"><a class="header-anchor" href="#path-dirname" aria-hidden="true">#</a> path.dirname()</h4><p>\u8FD4\u56DE\u8DEF\u5F84\u7684\u76EE\u5F55\u90E8\u5206\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something&#39;</span><span class="token punctuation">)</span> <span class="token comment">// /test</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something/file.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">// /test/something</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="path-extname" tabindex="-1"><a class="header-anchor" href="#path-extname" aria-hidden="true">#</a> path.extname()</h4><p>\u8FD4\u56DE\u8DEF\u5F84\u7684\u6269\u5C55\u540D\u90E8\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;&#39;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something/file.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;.txt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="path-isabsolute" tabindex="-1"><a class="header-anchor" href="#path-isabsolute" aria-hidden="true">#</a> path.isAbsolute()</h4><p>\u5982\u679C\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u5219\u8FD4\u56DE true\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token string">&#39;/test/something&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token string">&#39;./test/something&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="path-join" tabindex="-1"><a class="header-anchor" href="#path-join" aria-hidden="true">#</a> path.join()</h4><p>\u8FDE\u63A5\u8DEF\u5F84\u7684\u4E24\u4E2A\u6216\u591A\u4E2A\u90E8\u5206\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;joe&#39;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token string">&#39;notes.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;/users/joe/notes.txt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="path-normalize" tabindex="-1"><a class="header-anchor" href="#path-normalize" aria-hidden="true">#</a> path.normalize()</h4><p>\u5F53\u5305\u542B\u7C7B\u4F3C .\u3001.. \u6216\u53CC\u659C\u6760\u7B49\u76F8\u5BF9\u7684\u8BF4\u660E\u7B26\u65F6\uFF0C\u5219\u5C1D\u8BD5\u8BA1\u7B97\u5B9E\u9645\u7684\u8DEF\u5F84\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token string">&#39;/users/joe/..//test.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;/users/test.txt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="path-parse" tabindex="-1"><a class="header-anchor" href="#path-parse" aria-hidden="true">#</a> path.parse()</h4><p>\u89E3\u6790\u5BF9\u8C61\u7684\u8DEF\u5F84\u4E3A\u7EC4\u6210\u5176\u7684\u7247\u6BB5\uFF1A</p><ul><li>root: \u6839\u8DEF\u5F84\u3002</li><li>dir: \u4ECE\u6839\u8DEF\u5F84\u5F00\u59CB\u7684\u6587\u4EF6\u5939\u8DEF\u5F84\u3002</li><li>base: \u6587\u4EF6\u540D + \u6269\u5C55\u540D</li><li>name: \u6587\u4EF6\u540D</li><li>ext: \u6587\u4EF6\u6269\u5C55\u540D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;/users/test.txt&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// {</span>
<span class="token comment">//     root: &#39;/&#39;,</span>
<span class="token comment">//     dir: &#39;/users&#39;,</span>
<span class="token comment">//     base: &#39;test.txt&#39;,</span>
<span class="token comment">//     ext: &#39;.txt&#39;,</span>
<span class="token comment">//     name: &#39;test&#39;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="path-relative" tabindex="-1"><a class="header-anchor" href="#path-relative" aria-hidden="true">#</a> path.relative()</h4><p>\u63A5\u53D7 2 \u4E2A\u8DEF\u5F84\u4F5C\u4E3A\u53C2\u6570\u3002 \u57FA\u4E8E\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\uFF0C\u8FD4\u56DE\u4ECE\u7B2C\u4E00\u4E2A\u8DEF\u5F84\u5230\u7B2C\u4E8C\u4E2A\u8DEF\u5F84\u7684\u76F8\u5BF9\u8DEF\u5F84\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span><span class="token string">&#39;/Users/joe&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/Users/joe/test.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;test.txt&#39;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span><span class="token string">&#39;/Users/joe&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/Users/joe/something/test.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;something/test.txt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="path-resolve" tabindex="-1"><a class="header-anchor" href="#path-resolve" aria-hidden="true">#</a> path.resolve()</h4><p>\u53EF\u4EE5\u4F7F\u7528 path.resolve() \u83B7\u5F97\u76F8\u5BF9\u8DEF\u5F84\u7684\u7EDD\u5BF9\u8DEF\u5F84\u8BA1\u7B97\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;joe.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;/Users/joe/joe.txt&#39; \u5982\u679C\u4ECE\u4E3B\u6587\u4EF6\u5939\u8FD0\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u901A\u8FC7\u6307\u5B9A\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0Cresolve \u4F1A\u4F7F\u7528\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u57FA\u51C6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;tmp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;joe.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;/Users/joe/tmp/joe.txt&#39; \u5982\u679C\u4ECE\u4E3B\u6587\u4EF6\u5939\u8FD0\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4EE5\u659C\u6760\u5F00\u5934\uFF0C\u5219\u8868\u793A\u5B83\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;/etc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;joe.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;/etc/joe.txt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u64CD\u4F5C\u7CFB\u7EDF\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u7CFB\u7EDF\u6A21\u5757" aria-hidden="true">#</a> \u64CD\u4F5C\u7CFB\u7EDF\u6A21\u5757</h2><h4 id="os-arch" tabindex="-1"><a class="header-anchor" href="#os-arch" aria-hidden="true">#</a> os.arch()</h4><p>\u8FD4\u56DE\u6807\u8BC6\u5E95\u5C42\u67B6\u6784\u7684\u5B57\u7B26\u4E32\uFF0C\u4F8B\u5982 arm\u3001x64\u3001arm64\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">arch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-cpus" tabindex="-1"><a class="header-anchor" href="#os-cpus" aria-hidden="true">#</a> os.cpus()</h4><p>\u8FD4\u56DE\u5173\u4E8E\u7CFB\u7EDF\u4E0A\u53EF\u7528\u7684 CPU \u7684\u4FE1\u606F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-endianness" tabindex="-1"><a class="header-anchor" href="#os-endianness" aria-hidden="true">#</a> os.endianness()</h4><p>\u6839\u636E\u662F\u4F7F\u7528\u5927\u7AEF\u5E8F\u6216\u5C0F\u7AEF\u5E8F\u7F16\u8BD1 Node.js\uFF0C\u8FD4\u56DE BE \u6216 LE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">endianness</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-freemem" tabindex="-1"><a class="header-anchor" href="#os-freemem" aria-hidden="true">#</a> os.freemem()</h4><p>\u8FD4\u56DE\u4EE3\u8868\u7CFB\u7EDF\u4E2D\u53EF\u7528\u5185\u5B58\u7684\u5B57\u8282\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">freemem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;GB&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-homedir" tabindex="-1"><a class="header-anchor" href="#os-homedir" aria-hidden="true">#</a> os.homedir()</h4><p>\u8FD4\u56DE\u5230\u5F53\u524D\u7528\u6237\u7684\u4E3B\u76EE\u5F55\u7684\u8DEF\u5F84\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">homedir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-hostname" tabindex="-1"><a class="header-anchor" href="#os-hostname" aria-hidden="true">#</a> os.hostname()</h4><p>\u8FD4\u56DE\u4E3B\u673A\u540D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">hostname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-loadavg" tabindex="-1"><a class="header-anchor" href="#os-loadavg" aria-hidden="true">#</a> os.loadavg()</h4><p>\u8FD4\u56DE\u64CD\u4F5C\u7CFB\u7EDF\u5BF9\u5E73\u5747\u8D1F\u8F7D\u7684\u8BA1\u7B97\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">loadavg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u8FD9\u4EC5\u5728 Linux \u548C macOS \u4E0A\u8FD4\u56DE\u6709\u610F\u4E49\u7684\u503C\u3002</p></blockquote><h4 id="os-networkinterfaces" tabindex="-1"><a class="header-anchor" href="#os-networkinterfaces" aria-hidden="true">#</a> os.networkInterfaces()</h4><p>\u8FD4\u56DE\u7CFB\u7EDF\u4E0A\u53EF\u7528\u7684\u7F51\u7EDC\u63A5\u53E3\u7684\u8BE6\u7EC6\u4FE1\u606F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">networkInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-platform" tabindex="-1"><a class="header-anchor" href="#os-platform" aria-hidden="true">#</a> os.platform()</h4><ul><li>darwin</li><li>freebsd</li><li>linux</li><li>openbsd</li><li>win32</li><li>...\u7B49</li></ul><p>\u8FD4\u56DE\u4E3A Node.js \u7F16\u8BD1\u7684\u5E73\u53F0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">platform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-release" tabindex="-1"><a class="header-anchor" href="#os-release" aria-hidden="true">#</a> os.release()</h4><p>\u8FD4\u56DE\u6807\u8BC6\u64CD\u4F5C\u7CFB\u7EDF\u7248\u672C\u53F7\u7684\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-tmpdir" tabindex="-1"><a class="header-anchor" href="#os-tmpdir" aria-hidden="true">#</a> os.tmpdir()</h4><p>\u8FD4\u56DE\u6307\u5B9A\u7684\u4E34\u65F6\u6587\u4EF6\u5939\u7684\u8DEF\u5F84\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">tmpdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-totalmem" tabindex="-1"><a class="header-anchor" href="#os-totalmem" aria-hidden="true">#</a> os.totalmem()</h4><p>\u8FD4\u56DE\u8868\u793A\u7CFB\u7EDF\u4E2D\u53EF\u7528\u7684\u603B\u5185\u5B58\u7684\u5B57\u8282\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">totalmem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;GB&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-type" tabindex="-1"><a class="header-anchor" href="#os-type" aria-hidden="true">#</a> os.type()</h4><p>\u6807\u8BC6\u64CD\u4F5C\u7CFB\u7EDF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-uptime" tabindex="-1"><a class="header-anchor" href="#os-uptime" aria-hidden="true">#</a> os.uptime()</h4><p>\u8FD4\u56DE\u81EA\u4E0A\u6B21\u91CD\u65B0\u542F\u52A8\u4EE5\u6765\u8BA1\u7B97\u673A\u6301\u7EED\u8FD0\u884C\u7684\u79D2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">uptime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="os-userinfo" tabindex="-1"><a class="header-anchor" href="#os-userinfo" aria-hidden="true">#</a> os.userInfo()</h4><p>\u8FD4\u56DE\u5305\u542B\u5F53\u524D username\u3001uid\u3001gid\u3001shell \u548C homedir \u7684\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">userInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u4E8B\u4EF6\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u6A21\u5757" aria-hidden="true">#</a> \u4E8B\u4EF6\u6A21\u5757</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> EventEmitter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> door <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="emitter-addlistener" tabindex="-1"><a class="header-anchor" href="#emitter-addlistener" aria-hidden="true">#</a> emitter.addListener()</h4><p>emitter.on() \u7684\u522B\u540D\u3002</p><h4 id="emitter-emit" tabindex="-1"><a class="header-anchor" href="#emitter-emit" aria-hidden="true">#</a> emitter.emit()</h4><p>\u89E6\u53D1\u4E8B\u4EF6\u3002 \u6309\u7167\u4E8B\u4EF6\u88AB\u6CE8\u518C\u7684\u987A\u5E8F\u540C\u6B65\u5730\u8C03\u7528\u6BCF\u4E2A\u4E8B\u4EF6\u76D1\u542C\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;slam&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u89E6\u53D1slam\u4E8B\u4EF6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="emitter-eventnames" tabindex="-1"><a class="header-anchor" href="#emitter-eventnames" aria-hidden="true">#</a> emitter.eventNames()</h4><p>\u8FD4\u56DE\u5B57\u7B26\u4E32\uFF08\u8868\u793A\u5728\u5F53\u524D EventEmitter \u5BF9\u8C61\u4E0A\u6CE8\u518C\u7684\u4E8B\u4EF6\uFF09\u6570\u7EC4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">eventNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="emitter-getmaxlisteners" tabindex="-1"><a class="header-anchor" href="#emitter-getmaxlisteners" aria-hidden="true">#</a> emitter.getMaxListeners()</h4><p>\u83B7\u53D6\u53EF\u4EE5\u6DFB\u52A0\u5230 EventEmitter \u5BF9\u8C61\u7684\u76D1\u542C\u5668\u7684\u6700\u5927\u6570\u91CF\uFF08\u9ED8\u8BA4\u4E3A 10\uFF0C\u4F46\u53EF\u4EE5\u4F7F\u7528 setMaxListeners() \u8FDB\u884C\u589E\u52A0\u6216\u51CF\u5C11\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">getMaxListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="emitter-listenercount" tabindex="-1"><a class="header-anchor" href="#emitter-listenercount" aria-hidden="true">#</a> emitter.listenerCount()</h4><p>\u83B7\u53D6\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u7684\u8BA1\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">listenerCount</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="emitter-listeners" tabindex="-1"><a class="header-anchor" href="#emitter-listeners" aria-hidden="true">#</a> emitter.listeners()</h4><p>\u83B7\u53D6\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u7684\u6570\u7EC4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">listeners</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="emitter-off" tabindex="-1"><a class="header-anchor" href="#emitter-off" aria-hidden="true">#</a> emitter.off()</h4><p>emitter.removeListener() \u7684\u522B\u540D\uFF0C\u65B0\u589E\u4E8E Node.js 10\u3002</p><h4 id="emitter-on" tabindex="-1"><a class="header-anchor" href="#emitter-on" aria-hidden="true">#</a> emitter.on()</h4><p>\u6DFB\u52A0\u5F53\u4E8B\u4EF6\u88AB\u89E6\u53D1\u65F6\u8C03\u7528\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6253\u5F00&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="emitter-once" tabindex="-1"><a class="header-anchor" href="#emitter-once" aria-hidden="true">#</a> emitter.once()</h4><p>\u6DFB\u52A0\u5F53\u4E8B\u4EF6\u5728\u6CE8\u518C\u4E4B\u540E\u9996\u6B21\u88AB\u89E6\u53D1\u65F6\u8C03\u7528\u7684\u56DE\u8C03\u51FD\u6570\u3002 \u8BE5\u56DE\u8C03\u53EA\u4F1A\u88AB\u8C03\u7528\u4E00\u6B21\uFF0C\u4E0D\u4F1A\u518D\u88AB\u8C03\u7528\u3002</p><h4 id="emitter-prependlistener" tabindex="-1"><a class="header-anchor" href="#emitter-prependlistener" aria-hidden="true">#</a> emitter.prependListener()</h4><p>\u5F53\u4F7F\u7528 on \u6216 addListener \u6DFB\u52A0\u76D1\u542C\u5668\u65F6\uFF0C\u76D1\u542C\u5668\u4F1A\u88AB\u6DFB\u52A0\u5230\u76D1\u542C\u5668\u961F\u5217\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\uFF0C\u5E76\u4E14\u6700\u540E\u4E00\u4E2A\u88AB\u8C03\u7528\u3002 \u4F7F\u7528 prependListener \u5219\u53EF\u4EE5\u5728\u5176\u4ED6\u76D1\u542C\u5668\u4E4B\u524D\u6DFB\u52A0\u5E76\u8C03\u7528\u3002</p><h4 id="emitter-prependoncelistener" tabindex="-1"><a class="header-anchor" href="#emitter-prependoncelistener" aria-hidden="true">#</a> emitter.prependOnceListener()</h4><p>\u5F53\u4F7F\u7528 once \u6DFB\u52A0\u76D1\u542C\u5668\u65F6\uFF0C\u76D1\u542C\u5668\u4F1A\u88AB\u6DFB\u52A0\u5230\u76D1\u542C\u5668\u961F\u5217\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\uFF0C\u5E76\u4E14\u6700\u540E\u4E00\u4E2A\u88AB\u8C03\u7528\u3002 \u4F7F\u7528 prependOnceListener \u5219\u53EF\u4EE5\u5728\u5176\u4ED6\u76D1\u542C\u5668\u4E4B\u524D\u6DFB\u52A0\u5E76\u8C03\u7528\u3002</p><h4 id="emitter-removealllisteners" tabindex="-1"><a class="header-anchor" href="#emitter-removealllisteners" aria-hidden="true">#</a> emitter.removeAllListeners()</h4><p>\u79FB\u9664 EventEmitter \u5BF9\u8C61\u7684\u6240\u6709\u76D1\u542C\u7279\u5B9A\u4E8B\u4EF6\u7684\u76D1\u542C\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">removeAllListeners</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="emitter-removelistener" tabindex="-1"><a class="header-anchor" href="#emitter-removelistener" aria-hidden="true">#</a> emitter.removeListener()</h4><p>\u79FB\u9664\u7279\u5B9A\u7684\u76D1\u542C\u5668\u3002 \u53EF\u4EE5\u901A\u8FC7\u5C06\u56DE\u8C03\u51FD\u6570\u4FDD\u5B58\u5230\u53D8\u91CF\u4E2D\uFF08\u5F53\u6DFB\u52A0\u65F6\uFF09\uFF0C\u4EE5\u4FBF\u4EE5\u540E\u53EF\u4EE5\u5F15\u7528\u5B83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
door<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> doSomething<span class="token punctuation">)</span>
door<span class="token punctuation">.</span><span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> doSomething<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="emitter-setmaxlisteners" tabindex="-1"><a class="header-anchor" href="#emitter-setmaxlisteners" aria-hidden="true">#</a> emitter.setMaxListeners()</h4><p>\u8BBE\u7F6E\u53EF\u4EE5\u6DFB\u52A0\u5230 EventEmitter \u5BF9\u8C61\u7684\u76D1\u542C\u5668\u7684\u6700\u5927\u6570\u91CF\uFF08\u9ED8\u8BA4\u4E3A 10\uFF0C\u4F46\u53EF\u4EE5\u589E\u52A0\u6216\u51CF\u5C11\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>door<span class="token punctuation">.</span><span class="token function">setMaxListeners</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="http\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#http\u6A21\u5757" aria-hidden="true">#</a> http\u6A21\u5757</h2><h3 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h3><h4 id="http-methods" tabindex="-1"><a class="header-anchor" href="#http-methods" aria-hidden="true">#</a> http.METHODS</h4><p>\u6B64\u5C5E\u6027\u5217\u51FA\u4E86\u6240\u6709\u652F\u6301\u7684 HTTP \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token constant">METHODS</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="http-status-codes" tabindex="-1"><a class="header-anchor" href="#http-status-codes" aria-hidden="true">#</a> http.STATUS_CODES</h4><p>\u6B64\u5C5E\u6027\u5217\u51FA\u4E86\u6240\u6709\u7684 HTTP \u72B6\u6001\u4EE3\u7801\u53CA\u5176\u63CF\u8FF0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token constant">STATUS_CODES</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="http-globalagent" tabindex="-1"><a class="header-anchor" href="#http-globalagent" aria-hidden="true">#</a> http.globalAgent</h4><p>\u6307\u5411 Agent \u5BF9\u8C61\u7684\u5168\u5C40\u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u662F http.Agent \u7C7B\u7684\u5B9E\u4F8B\u3002</p><h3 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h3><h4 id="http-createserver" tabindex="-1"><a class="header-anchor" href="#http-createserver" aria-hidden="true">#</a> http.createServer()</h4><p>\u8FD4\u56DE http.Server \u7C7B\u7684\u65B0\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u4F7F\u7528\u6B64\u56DE\u8C03\u5904\u7406\u6BCF\u4E2A\u5355\u72EC\u7684\u8BF7\u6C42\u3002</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="http-request" tabindex="-1"><a class="header-anchor" href="#http-request" aria-hidden="true">#</a> http.request()</h4><p>\u53D1\u9001 HTTP \u8BF7\u6C42\u5230\u670D\u52A1\u5668\uFF0C\u5E76\u521B\u5EFA http.ClientRequest \u7C7B\u7684\u5B9E\u4F8B\u3002</p><h4 id="http-get" tabindex="-1"><a class="header-anchor" href="#http-get" aria-hidden="true">#</a> http.get()</h4><p>\u7C7B\u4F3C\u4E8E http.request()\uFF0C\u4F46\u4F1A\u81EA\u52A8\u5730\u8BBE\u7F6E HTTP \u65B9\u6CD5\u4E3A GET\uFF0C\u5E76\u81EA\u52A8\u5730\u8C03\u7528 req.end()\u3002</p><h3 id="\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a> \u7C7B</h3><p>HTTP \u6A21\u5757\u63D0\u4F9B\u4E86 5 \u4E2A\u7C7B</p><ul><li>http.Agent</li><li>http.ClientRequest</li><li>http.Server</li><li>http.ServerResponse</li><li>http.IncomingMessage</li></ul><h4 id="http-agent" tabindex="-1"><a class="header-anchor" href="#http-agent" aria-hidden="true">#</a> http.Agent</h4><p>Node.js \u4F1A\u521B\u5EFA http.Agent \u7C7B\u7684\u5168\u5C40\u5B9E\u4F8B\uFF0C\u4EE5\u7BA1\u7406 HTTP \u5BA2\u6237\u7AEF\u8FDE\u63A5\u7684\u6301\u4E45\u6027\u548C\u590D\u7528\uFF0C\u8FD9\u662F Node.js HTTP \u7F51\u7EDC\u7684\u5173\u952E\u7EC4\u6210\u90E8\u5206\u3002</p><p>\u8BE5\u5BF9\u8C61\u4F1A\u786E\u4FDD\u5BF9\u670D\u52A1\u5668\u7684\u6BCF\u4E2A\u8BF7\u6C42\u8FDB\u884C\u6392\u961F\u5E76\u4E14\u5355\u4E2A socket \u88AB\u590D\u7528\u3002</p><p>\u5B83\u8FD8\u7EF4\u62A4\u4E00\u4E2A socket \u6C60\u3002 \u51FA\u4E8E\u6027\u80FD\u539F\u56E0\uFF0C\u8FD9\u662F\u5173\u952E\u3002</p><h4 id="http-clientrequest" tabindex="-1"><a class="header-anchor" href="#http-clientrequest" aria-hidden="true">#</a> http.ClientRequest</h4><p>\u5F53 http.request() \u6216 http.get() \u88AB\u8C03\u7528\u65F6\uFF0C\u4F1A\u521B\u5EFA http.ClientRequest \u5BF9\u8C61\u3002</p><p>\u5F53\u54CD\u5E94\u88AB\u63A5\u6536\u65F6\uFF0C\u5219\u4F1A\u4F7F\u7528\u54CD\u5E94\uFF08http.IncomingMessage \u5B9E\u4F8B\u4F5C\u4E3A\u53C2\u6570\uFF09\u6765\u8C03\u7528 response \u4E8B\u4EF6\u3002</p><p>\u8FD4\u56DE\u7684\u54CD\u5E94\u6570\u636E\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F\u8BFB\u53D6\uFF1A</p><ul><li>\u53EF\u4EE5\u8C03\u7528 response.read() \u65B9\u6CD5\u3002</li><li>\u5728 response \u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D\uFF0C\u53EF\u4EE5\u4E3A data \u4E8B\u4EF6\u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\u5668\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u76D1\u542C\u6D41\u5165\u7684\u6570\u636E\u3002</li></ul><h4 id="http-server" tabindex="-1"><a class="header-anchor" href="#http-server" aria-hidden="true">#</a> http.Server</h4><p>\u5F53\u4F7F\u7528 http.createServer() \u521B\u5EFA\u65B0\u7684\u670D\u52A1\u5668\u65F6\uFF0C\u901A\u5E38\u4F1A\u5B9E\u4F8B\u5316\u5E76\u8FD4\u56DE\u6B64\u7C7B\u3002</p><p>\u62E5\u6709\u670D\u52A1\u5668\u5BF9\u8C61\u540E\uFF0C\u5C31\u53EF\u4EE5\u8BBF\u95EE\u5176\u65B9\u6CD5\uFF1A</p><ul><li>close() \u505C\u6B62\u670D\u52A1\u5668\u4E0D\u518D\u63A5\u53D7\u65B0\u7684\u8FDE\u63A5\u3002</li><li>listen() \u542F\u52A8 HTTP \u670D\u52A1\u5668\u5E76\u76D1\u542C\u8FDE\u63A5\u3002</li></ul><h4 id="http-serverresponse" tabindex="-1"><a class="header-anchor" href="#http-serverresponse" aria-hidden="true">#</a> http.ServerResponse</h4><p>\u7531 http.Server \u521B\u5EFA\uFF0C\u5E76\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u7ED9\u5B83\u89E6\u53D1\u7684 request \u4E8B\u4EF6\u3002</p><p>\u901A\u5E38\u5728\u4EE3\u7801\u4E2D\u7528\u4F5C res\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//res \u662F\u4E00\u4E2A http.ServerResponse \u5BF9\u8C61\u3002</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D\u603B\u662F\u4F1A\u8C03\u7528\u7684\u65B9\u6CD5\u662F end()\uFF0C\u5B83\u4F1A\u5173\u95ED\u54CD\u5E94\uFF0C\u5F53\u6D88\u606F\u5B8C\u6210\u65F6\u5219\u670D\u52A1\u5668\u53EF\u4EE5\u5C06\u5176\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002 \u5FC5\u987B\u5728\u6BCF\u4E2A\u54CD\u5E94\u4E0A\u8C03\u7528\u5B83\u3002</p><p>\u4EE5\u4E0B\u8FD9\u4E9B\u65B9\u6CD5\u7528\u4E8E\u4E0E HTTP \u6D88\u606F\u5934\u8FDB\u884C\u4EA4\u4E92\uFF1A</p><ul><li>getHeaderNames() \u83B7\u53D6\u5DF2\u8BBE\u7F6E\u7684 HTTP \u6D88\u606F\u5934\u540D\u79F0\u7684\u5217\u8868\u3002</li><li>getHeaders() \u83B7\u53D6\u5DF2\u8BBE\u7F6E\u7684 HTTP \u6D88\u606F\u5934\u7684\u526F\u672C\u3002</li><li>setHeader(&#39;headername&#39;, value) \u8BBE\u7F6E HTTP \u6D88\u606F\u5934\u7684\u503C\u3002</li><li>getHeader(&#39;headername&#39;) \u83B7\u53D6\u5DF2\u8BBE\u7F6E\u7684 HTTP \u6D88\u606F\u5934\u3002</li><li>removeHeader(&#39;headername&#39;) \u5220\u9664\u5DF2\u8BBE\u7F6E\u7684 HTTP \u6D88\u606F\u5934\u3002</li><li>hasHeader(&#39;headername&#39;) \u5982\u679C\u54CD\u5E94\u5DF2\u8BBE\u7F6E\u8BE5\u6D88\u606F\u5934\uFF0C\u5219\u8FD4\u56DE true\u3002</li><li>headersSent() \u5982\u679C\u6D88\u606F\u5934\u5DF2\u88AB\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u5219\u8FD4\u56DE true\u3002</li></ul><p>\u5728\u5904\u7406\u6D88\u606F\u5934\u4E4B\u540E\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 response.writeHead()\uFF08\u8BE5\u65B9\u6CD5\u63A5\u53D7 statusCode \u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u53EF\u9009\u7684\u72B6\u6001\u6D88\u606F\u548C\u6D88\u606F\u5934\u5BF9\u8C61\uFF09\u5C06\u5B83\u4EEC\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002</p><p>\u82E5\u8981\u5728\u54CD\u5E94\u6B63\u6587\u4E2D\u53D1\u9001\u6570\u636E\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u5219\u4F7F\u7528 write()\u3002 \u5B83\u4F1A\u53D1\u9001\u7F13\u51B2\u7684\u6570\u636E\u5230 HTTP \u54CD\u5E94\u6D41\u3002</p><p>\u5982\u679C\u6D88\u606F\u5934\u8FD8\u672A\u88AB\u53D1\u9001\uFF0C\u5219\u4F7F\u7528 response.writeHead() \u4F1A\u5148\u53D1\u9001\u6D88\u606F\u5934\uFF0C\u5176\u4E2D\u5305\u542B\u5728\u8BF7\u6C42\u4E2D\u5DF2\u88AB\u8BBE\u7F6E\u7684\u72B6\u6001\u7801\u548C\u6D88\u606F\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E statusCode \u548C statusMessage \u5C5E\u6027\u7684\u503C\u8FDB\u884C\u7F16\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>response<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">500</span>
response<span class="token punctuation">.</span>statusMessage <span class="token operator">=</span> <span class="token string">&#39;\u5185\u90E8\u670D\u52A1\u5668\u9519\u8BEF&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="http-incomingmessage" tabindex="-1"><a class="header-anchor" href="#http-incomingmessage" aria-hidden="true">#</a> http.IncomingMessage</h4><p>http.IncomingMessage \u5BF9\u8C61\u53EF\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u521B\u5EFA\uFF1A</p><ul><li>http.Server\uFF0C\u5F53\u76D1\u542C request \u4E8B\u4EF6\u65F6\u3002</li><li>http.ClientRequest\uFF0C\u5F53\u76D1\u542C response \u4E8B\u4EF6\u65F6\u3002</li></ul><p>\u5B83\u53EF\u4EE5\u7528\u6765\u8BBF\u95EE\u54CD\u5E94\uFF1A</p><ul><li>\u4F7F\u7528 statusCode \u548C statusMessage \u65B9\u6CD5\u6765\u8BBF\u95EE\u72B6\u6001\u3002</li><li>\u4F7F\u7528 headers \u65B9\u6CD5\u6216 rawHeaders \u6765\u8BBF\u95EE\u6D88\u606F\u5934\u3002</li><li>\u4F7F\u7528 method \u65B9\u6CD5\u6765\u8BBF\u95EE HTTP \u65B9\u6CD5\u3002</li><li>\u4F7F\u7528 httpVersion \u65B9\u6CD5\u6765\u8BBF\u95EE HTTP \u7248\u672C\u3002</li><li>\u4F7F\u7528 url \u65B9\u6CD5\u6765\u8BBF\u95EE URL\u3002</li><li>\u4F7F\u7528 socket \u65B9\u6CD5\u6765\u8BBF\u95EE\u5E95\u5C42\u7684 socket\u3002</li></ul><p>\u56E0\u4E3A http.IncomingMessage \u5B9E\u73B0\u4E86\u53EF\u8BFB\u6D41\u63A5\u53E3\uFF0C\u56E0\u6B64\u6570\u636E\u53EF\u4EE5\u4F7F\u7528\u6D41\u8BBF\u95EE\u3002</p><h2 id="buffer" tabindex="-1"><a class="header-anchor" href="#buffer" aria-hidden="true">#</a> Buffer</h2><h3 id="\u4EC0\u4E48\u662F-buffer" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F-buffer" aria-hidden="true">#</a> \u4EC0\u4E48\u662F buffer\uFF1F</h3><p>Buffer \u662F\u5185\u5B58\u533A\u57DF\u3002 JavaScript \u5F00\u53D1\u8005\u53EF\u80FD\u5BF9\u8FD9\u4E2A\u6982\u5FF5\u5E76\u4E0D\u719F\u6089\uFF0C\u6BD4\u6BCF\u5929\u4E0E\u5185\u5B58\u4EA4\u4E92\u7684 C\u3001C++ \u6216 Go \u5F00\u53D1\u8005\uFF08\u6216\u4F7F\u7528\u7CFB\u7EDF\u7F16\u7A0B\u8BED\u8A00\u7684\u4EFB\u4F55\u7A0B\u5E8F\u5458\uFF09\u8981\u5C11\u5F97\u591A\u3002</p><p>\u5B83\u8868\u793A\u5728 V8 JavaScript \u5F15\u64CE\u5916\u90E8\u5206\u914D\u7684\u56FA\u5B9A\u5927\u5C0F\u7684\u5185\u5B58\u5757\uFF08\u65E0\u6CD5\u8C03\u6574\u5927\u5C0F\uFF09\u3002</p><p>\u53EF\u4EE5\u5C06 buffer \u89C6\u4E3A\u6574\u6570\u6570\u7EC4\uFF0C\u6BCF\u4E2A\u6574\u6570\u4EE3\u8868\u4E00\u4E2A\u6570\u636E\u5B57\u8282\u3002</p><p>\u5B83\u7531 Node.js Buffer \u7C7B\u5B9E\u73B0\u3002</p><h3 id="\u4E3A\u4EC0\u4E48\u9700\u8981-buffer" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u9700\u8981-buffer" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u9700\u8981 buffer\uFF1F</h3><p>Buffer \u88AB\u5F15\u5165\u7528\u4EE5\u5E2E\u52A9\u5F00\u53D1\u8005\u5904\u7406\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u5728\u6B64\u751F\u6001\u7CFB\u7EDF\u4E2D\u4F20\u7EDF\u4E0A\u53EA\u5904\u7406\u5B57\u7B26\u4E32\u800C\u4E0D\u662F\u4E8C\u8FDB\u5236\u6570\u636E\u3002</p><p>Buffer \u4E0E\u6D41\u7D27\u5BC6\u76F8\u8FDE\u3002 \u5F53\u6D41\u5904\u7406\u5668\u63A5\u6536\u6570\u636E\u7684\u901F\u5EA6\u5FEB\u4E8E\u5176\u6D88\u5316\u7684\u901F\u5EA6\u65F6\uFF0C\u5219\u4F1A\u5C06\u6570\u636E\u653E\u5165 buffer \u4E2D\u3002</p><p>\u4E00\u4E2A\u7B80\u5355\u7684\u573A\u666F\u662F\uFF1A\u5F53\u89C2\u770B YouTube \u89C6\u9891\u65F6\uFF0C\u7EA2\u7EBF\u8D85\u8FC7\u4E86\u89C2\u770B\u70B9\uFF1A\u5373\u4E0B\u8F7D\u6570\u636E\u7684\u901F\u5EA6\u6BD4\u67E5\u770B\u6570\u636E\u7684\u901F\u5EA6\u5FEB\uFF0C\u4E14\u6D4F\u89C8\u5668\u4F1A\u5BF9\u6570\u636E\u8FDB\u884C\u7F13\u51B2\u3002</p><h3 id="\u5982\u4F55\u521B\u5EFA-buffer" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u521B\u5EFA-buffer" aria-hidden="true">#</a> \u5982\u4F55\u521B\u5EFA buffer</h3><p>\u4F7F\u7528 Buffer.from()\u3001Buffer.alloc() \u548C Buffer.allocUnsafe() \u65B9\u6CD5\u53EF\u4EE5\u521B\u5EFA buffer\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>Buffer.from(array)</li><li>Buffer.from(arrayBuffer[, byteOffset[, length]])</li><li>Buffer.from(buffer)</li><li>Buffer.from(string[, encoding])</li></ul><p>\u4E5F\u53EF\u4EE5\u53EA\u521D\u59CB\u5316 buffer\uFF08\u4F20\u5165\u5927\u5C0F\uFF09\u3002 \u4EE5\u4E0B\u4F1A\u521B\u5EFA\u4E00\u4E2A 1KB \u7684 buffer\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>
<span class="token comment">// \u6216</span>
<span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">allocUnsafe</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u867D\u7136 alloc \u548C allocUnsafe \u5747\u5206\u914D\u6307\u5B9A\u5927\u5C0F\u7684 Buffer\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\uFF0C\u4F46\u662F alloc \u521B\u5EFA\u7684 Buffer \u4F1A\u88AB\u4F7F\u7528\u96F6\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u800C allocUnsafe \u521B\u5EFA\u7684 Buffer \u4E0D\u4F1A\u88AB\u521D\u59CB\u5316\u3002 \u8FD9\u610F\u5473\u7740\uFF0C\u5C3D\u7BA1 allocUnsafe \u6BD4 alloc \u8981\u5FEB\u5F97\u591A\uFF0C\u4F46\u662F\u5206\u914D\u7684\u5185\u5B58\u7247\u6BB5\u53EF\u80FD\u5305\u542B\u53EF\u80FD\u654F\u611F\u7684\u65E7\u6570\u636E\u3002</p><p>\u5F53 Buffer \u5185\u5B58\u88AB\u8BFB\u53D6\u65F6\uFF0C\u5982\u679C\u5185\u5B58\u4E2D\u5B58\u5728\u8F83\u65E7\u7684\u6570\u636E\uFF0C\u5219\u53EF\u4EE5\u88AB\u8BBF\u95EE\u6216\u6CC4\u6F0F\u3002 \u8FD9\u5C31\u662F\u771F\u6B63\u4F7F allocUnsafe \u4E0D\u5B89\u5168\u7684\u539F\u56E0\uFF0C\u5728\u4F7F\u7528\u5B83\u65F6\u5FC5\u987B\u683C\u5916\u5C0F\u5FC3\u3002</p><h3 id="\u4F7F\u7528-buffer" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-buffer" aria-hidden="true">#</a> \u4F7F\u7528 buffer</h3><h4 id="\u8BBF\u95EE-buffer-\u7684\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE-buffer-\u7684\u5185\u5BB9" aria-hidden="true">#</a> \u8BBF\u95EE buffer \u7684\u5185\u5BB9</h4><p>Buffer\uFF08\u5B57\u8282\u6570\u7EC4\uFF09\u53EF\u4EE5\u50CF\u6570\u7EC4\u4E00\u6837\u88AB\u8BBF\u95EE\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//72</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//101</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//121</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u4E9B\u6570\u5B57\u662F Unicode \u7801\uFF0C\u7528\u4E8E\u6807\u8BC6 buffer \u4F4D\u7F6E\u4E2D\u7684\u5B57\u7B26\uFF08H =&gt; 72\u3001e =&gt; 101\u3001y =&gt; 121\uFF09\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528 toString() \u65B9\u6CD5\u6253\u5370 buffer \u7684\u5168\u90E8\u5185\u5BB9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF0C\u5982\u679C\u4F7F\u7528\u6570\u5B57\uFF08\u8BBE\u7F6E\u5176\u5927\u5C0F\uFF09\u521D\u59CB\u5316 buffer\uFF0C\u5219\u53EF\u4EE5\u8BBF\u95EE\u5230\u5305\u542B\u968F\u673A\u6570\u636E\u7684\u5DF2\u9884\u521D\u59CB\u5316\u7684\u5185\u5B58\uFF08\u800C\u4E0D\u662F\u7A7A\u7684 buffer\uFF09\uFF01</p></blockquote><h4 id="\u83B7\u53D6-buffer-\u7684\u957F\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-buffer-\u7684\u957F\u5EA6" aria-hidden="true">#</a> \u83B7\u53D6 buffer \u7684\u957F\u5EA6</h4><p>\u4F7F\u7528 length \u5C5E\u6027\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u8FED\u4EE3-buffer-\u7684\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3-buffer-\u7684\u5185\u5BB9" aria-hidden="true">#</a> \u8FED\u4EE3 buffer \u7684\u5185\u5BB9</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> buf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment">//72 101 121 33</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u66F4\u6539-buffer-\u7684\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u66F4\u6539-buffer-\u7684\u5185\u5BB9" aria-hidden="true">#</a> \u66F4\u6539 buffer \u7684\u5185\u5BB9</h4><p>\u53EF\u4EE5\u4F7F\u7528 write() \u65B9\u6CD5\u5C06\u6574\u4E2A\u6570\u636E\u5B57\u7B26\u4E32\u5199\u5165 buffer\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5C31\u50CF\u53EF\u4EE5\u4F7F\u7528\u6570\u7EC4\u8BED\u6CD5\u8BBF\u95EE buffer \u4E00\u6837\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u76F8\u540C\u7684\u65B9\u5F0F\u8BBE\u7F6E buffer \u7684\u5185\u5BB9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">111</span> <span class="token comment">//o</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//Hoy!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="\u590D\u5236-buffer" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236-buffer" aria-hidden="true">#</a> \u590D\u5236 buffer</h4><p>\u4F7F\u7528 copy() \u65B9\u6CD5\u53EF\u4EE5\u590D\u5236 buffer\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> bufcopy <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">//\u5206\u914D 4 \u4E2A\u5B57\u8282\u3002</span>
buf<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>bufcopy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u4F1A\u590D\u5236\u6574\u4E2A buffer\u3002 \u53E6\u5916\u7684 3 \u4E2A\u53C2\u6570\u53EF\u4EE5\u5B9A\u4E49\u5F00\u59CB\u4F4D\u7F6E\u3001\u7ED3\u675F\u4F4D\u7F6E\u3001\u4EE5\u53CA\u65B0\u7684 buffer \u957F\u5EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> bufcopy <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//\u5206\u914D 2 \u4E2A\u5B57\u8282\u3002</span>
buf<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>bufcopy<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
bufcopy<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//&#39;He</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u5207\u7247-buffer" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247-buffer" aria-hidden="true">#</a> \u5207\u7247 buffer</h4><p>\u5982\u679C\u8981\u521B\u5EFA buffer \u7684\u5C40\u90E8\u89C6\u56FE\uFF0C\u5219\u53EF\u4EE5\u521B\u5EFA\u5207\u7247\u3002 \u5207\u7247\u4E0D\u662F\u526F\u672C\uFF1A\u539F\u59CB buffer \u4ECD\u7136\u662F\u771F\u6B63\u7684\u6765\u6E90\u3002 \u5982\u679C\u90A3\u6539\u53D8\u4E86\uFF0C\u5219\u5207\u7247\u4E5F\u4F1A\u6539\u53D8\u3002</p><p>\u4F7F\u7528 slice() \u65B9\u6CD5\u521B\u5EFA\u5B83\u3002 \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u8D77\u59CB\u4F4D\u7F6E\uFF0C\u53EF\u4EE5\u6307\u5B9A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F5C\u4E3A\u7ED3\u675F\u4F4D\u7F6E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;Hey!&#39;</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//Hey!</span>
<span class="token keyword">const</span> slice <span class="token operator">=</span> buf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>slice<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//He</span>
buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">111</span> <span class="token comment">//o</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>slice<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//Ho</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u6D41" tabindex="-1"><a class="header-anchor" href="#\u6D41" aria-hidden="true">#</a> \u6D41</h2><h3 id="\u4EC0\u4E48\u662F\u6D41" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u6D41" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u6D41</h3><p>\u6D41\u662F\u4E3A Node.js \u5E94\u7528\u7A0B\u5E8F\u63D0\u4F9B\u52A8\u529B\u7684\u57FA\u672C\u6982\u5FF5\u4E4B\u4E00\u3002</p><p>\u5B83\u4EEC\u662F\u4E00\u79CD\u4EE5\u9AD8\u6548\u7684\u65B9\u5F0F\u5904\u7406\u8BFB/\u5199\u6587\u4EF6\u3001\u7F51\u7EDC\u901A\u4FE1\u3001\u6216\u4EFB\u4F55\u7C7B\u578B\u7684\u7AEF\u5230\u7AEF\u7684\u4FE1\u606F\u4EA4\u6362\u3002</p><p>\u6D41\u4E0D\u662F Node.js \u7279\u6709\u7684\u6982\u5FF5\u3002 \u5B83\u4EEC\u662F\u51E0\u5341\u5E74\u524D\u5728 Unix \u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u5F15\u5165\u7684\uFF0C\u7A0B\u5E8F\u53EF\u4EE5\u901A\u8FC7\u7BA1\u9053\u8FD0\u7B97\u7B26\uFF08|\uFF09\u5BF9\u6D41\u8FDB\u884C\u76F8\u4E92\u4EA4\u4E92\u3002</p><p>\u4F8B\u5982\uFF0C\u5728\u4F20\u7EDF\u7684\u65B9\u5F0F\u4E2D\uFF0C\u5F53\u544A\u8BC9\u7A0B\u5E8F\u8BFB\u53D6\u6587\u4EF6\u65F6\uFF0C\u8FD9\u4F1A\u5C06\u6587\u4EF6\u4ECE\u5934\u5230\u5C3E\u8BFB\u5165\u5185\u5B58\uFF0C\u7136\u540E\u8FDB\u884C\u5904\u7406\u3002</p><p>\u4F7F\u7528\u6D41\uFF0C\u5219\u53EF\u4EE5\u9010\u4E2A\u7247\u6BB5\u5730\u8BFB\u53D6\u5E76\u5904\u7406\uFF08\u800C\u65E0\u9700\u5168\u90E8\u4FDD\u5B58\u5728\u5185\u5B58\u4E2D\uFF09\u3002</p><p>Node.js \u7684 stream \u6A21\u5757 \u63D0\u4F9B\u4E86\u6784\u5EFA\u6240\u6709\u6D41 API \u7684\u57FA\u7840\u3002 \u6240\u6709\u7684\u6D41\u90FD\u662F EventEmitter \u7684\u5B9E\u4F8B\u3002</p><h3 id="\u4E3A\u4EC0\u4E48\u662F\u6D41" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u662F\u6D41" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u662F\u6D41</h3><p>\u76F8\u5BF9\u4E8E\u4F7F\u7528\u5176\u4ED6\u7684\u6570\u636E\u5904\u7406\u65B9\u6CD5\uFF0C\u6D41\u57FA\u672C\u4E0A\u63D0\u4F9B\u4E86\u4E24\u4E2A\u4E3B\u8981\u4F18\u70B9\uFF1A</p><ul><li><strong>\u5185\u5B58\u6548\u7387</strong>: \u65E0\u9700\u52A0\u8F7D\u5927\u91CF\u7684\u6570\u636E\u5230\u5185\u5B58\u4E2D\u5373\u53EF\u8FDB\u884C\u5904\u7406\u3002</li><li><strong>\u65F6\u95F4\u6548\u7387</strong>: \u5F53\u83B7\u5F97\u6570\u636E\u4E4B\u540E\u5373\u53EF\u7ACB\u5373\u5F00\u59CB\u5904\u7406\u6570\u636E\uFF0C\u8FD9\u6837\u6240\u9700\u7684\u65F6\u95F4\u66F4\u5C11\uFF0C\u800C\u4E0D\u5FC5\u7B49\u5230\u6574\u4E2A\u6570\u636E\u6709\u6548\u8D1F\u8F7D\u53EF\u7528\u624D\u5F00\u59CB\u3002</li></ul><h3 id="\u6D41\u7684\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7684\u793A\u4F8B" aria-hidden="true">#</a> \u6D41\u7684\u793A\u4F8B</h3><p>\u4E2A\u5178\u578B\u7684\u4F8B\u5B50\u662F\u4ECE\u78C1\u76D8\u8BFB\u53D6\u6587\u4EF6\u3002</p><p>\u4F7F\u7528 Node.js \u7684 fs \u6A21\u5757\uFF0C\u53EF\u4EE5\u8BFB\u53D6\u6587\u4EF6\uFF0C\u5E76\u5728\u4E0E HTTP \u670D\u52A1\u5668\u5EFA\u7ACB\u65B0\u8FDE\u63A5\u65F6\u901A\u8FC7 HTTP \u63D0\u4F9B\u6587\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span>
		res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">)</span>
		res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>readFile() \u8BFB\u53D6\u6587\u4EF6\u7684\u5168\u90E8\u5185\u5BB9\uFF0C\u5E76\u5728\u5B8C\u6210\u65F6\u8C03\u7528\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u56DE\u8C03\u4E2D\u7684 res.end(data) \u4F1A\u8FD4\u56DE\u6587\u4EF6\u7684\u5185\u5BB9\u7ED9 HTTP \u5BA2\u6237\u7AEF\u3002</p><p>\u5982\u679C\u6587\u4EF6\u5F88\u5927\uFF0C\u5219\u8BE5\u64CD\u4F5C\u4F1A\u82B1\u8D39\u8F83\u591A\u7684\u65F6\u95F4\u3002 \u4EE5\u4E0B\u662F\u4F7F\u7528\u6D41\u7F16\u5199\u7684\u76F8\u540C\u5185\u5BB9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> stream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">)</span>

	stream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="pipe" tabindex="-1"><a class="header-anchor" href="#pipe" aria-hidden="true">#</a> pipe()</h4><p>\u4E0A\u9762\u7684\u793A\u4F8B\u4F7F\u7528\u4E86 stream.pipe(res) \u8FD9\u884C\u4EE3\u7801\uFF1A\u5728\u6587\u4EF6\u6D41\u4E0A\u8C03\u7528 pipe() \u65B9\u6CD5\u3002</p><p>\u8BE5\u4EE3\u7801\u7684\u4F5C\u7528\u662F\u4EC0\u4E48\uFF1F \u5B83\u83B7\u53D6\u6765\u6E90\u6D41\uFF0C\u5E76\u5C06\u5176\u901A\u8FC7\u7BA1\u9053\u4F20\u8F93\u5230\u76EE\u6807\u6D41\u3002</p><p>\u5728\u6765\u6E90\u6D41\u4E0A\u8C03\u7528\u5B83\uFF0C\u5728\u8BE5\u793A\u4F8B\u4E2D\uFF0C\u6587\u4EF6\u6D41\u901A\u8FC7\u7BA1\u9053\u4F20\u8F93\u5230 HTTP \u54CD\u5E94\u3002</p><p>pipe() \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u662F\u76EE\u6807\u6D41\uFF0C\u8FD9\u662F\u975E\u5E38\u65B9\u4FBF\u7684\u4E8B\u60C5\uFF0C\u5B83\u4F7F\u5F97\u53EF\u4EE5\u94FE\u63A5\u591A\u4E2A pipe() \u8C03\u7528\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>src<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>dest1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>dest2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6B64\u6784\u9020\u76F8\u5BF9\u4E8E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>src<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>dest1<span class="token punctuation">)</span>
dest1<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>dest2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u9A71\u52A8\u7684-node-js-api" tabindex="-1"><a class="header-anchor" href="#\u9A71\u52A8\u7684-node-js-api" aria-hidden="true">#</a> \u9A71\u52A8\u7684 Node.js API</h3><p>\u7531\u4E8E\u5B83\u4EEC\u7684\u4F18\u70B9\uFF0C\u8BB8\u591A Node.js \u6838\u5FC3\u6A21\u5757\u63D0\u4F9B\u4E86\u539F\u751F\u7684\u6D41\u5904\u7406\u529F\u80FD\uFF0C\u6700\u503C\u5F97\u6CE8\u610F\u7684\u6709\uFF1A</p><ul><li>process.stdin \u8FD4\u56DE\u8FDE\u63A5\u5230 stdin \u7684\u6D41\u3002</li><li>process.stdout \u8FD4\u56DE\u8FDE\u63A5\u5230 stdout \u7684\u6D41\u3002</li><li>process.stderr \u8FD4\u56DE\u8FDE\u63A5\u5230 stderr \u7684\u6D41\u3002</li><li>fs.createReadStream() \u521B\u5EFA\u6587\u4EF6\u7684\u53EF\u8BFB\u6D41\u3002</li><li>fs.createWriteStream() \u521B\u5EFA\u5230\u6587\u4EF6\u7684\u53EF\u5199\u6D41\u3002</li><li>net.connect() \u542F\u52A8\u57FA\u4E8E\u6D41\u7684\u8FDE\u63A5\u3002</li><li>http.request() \u8FD4\u56DE http.ClientRequest \u7C7B\u7684\u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u662F\u53EF\u5199\u6D41\u3002</li><li>zlib.createGzip() \u4F7F\u7528 gzip\uFF08\u538B\u7F29\u7B97\u6CD5\uFF09\u5C06\u6570\u636E\u538B\u7F29\u5230\u6D41\u4E2D\u3002</li><li>zlib.createGunzip() \u89E3\u538B\u7F29 gzip \u6D41\u3002</li><li>zlib.createDeflate() \u4F7F\u7528 deflate\uFF08\u538B\u7F29\u7B97\u6CD5\uFF09\u5C06\u6570\u636E\u538B\u7F29\u5230\u6D41\u4E2D\u3002</li><li>zlib.createInflate() \u89E3\u538B\u7F29 deflate \u6D41\u3002</li></ul><h3 id="\u4E0D\u540C\u7C7B\u578B\u7684\u6D41" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u540C\u7C7B\u578B\u7684\u6D41" aria-hidden="true">#</a> \u4E0D\u540C\u7C7B\u578B\u7684\u6D41</h3><p>\u6D41\u5206\u4E3A\u56DB\u7C7B\uFF1A</p><ul><li>Readable: \u53EF\u4EE5\u901A\u8FC7\u7BA1\u9053\u8BFB\u53D6\u3001\u4F46\u4E0D\u80FD\u901A\u8FC7\u7BA1\u9053\u5199\u5165\u7684\u6D41\uFF08\u53EF\u4EE5\u63A5\u6536\u6570\u636E\uFF0C\u4F46\u4E0D\u80FD\u5411\u5176\u53D1\u9001\u6570\u636E\uFF09\u3002 \u5F53\u63A8\u9001\u6570\u636E\u5230\u53EF\u8BFB\u6D41\u4E2D\u65F6\uFF0C\u4F1A\u5BF9\u5176\u8FDB\u884C\u7F13\u51B2\uFF0C\u76F4\u5230\u4F7F\u7528\u8005\u5F00\u59CB\u8BFB\u53D6\u6570\u636E\u4E3A\u6B62\u3002</li><li>Writable: \u53EF\u4EE5\u901A\u8FC7\u7BA1\u9053\u5199\u5165\u3001\u4F46\u4E0D\u80FD\u901A\u8FC7\u7BA1\u9053\u8BFB\u53D6\u7684\u6D41\uFF08\u53EF\u4EE5\u53D1\u9001\u6570\u636E\uFF0C\u4F46\u4E0D\u80FD\u4ECE\u4E2D\u63A5\u6536\u6570\u636E\uFF09\u3002</li><li>Duplex: \u53EF\u4EE5\u901A\u8FC7\u7BA1\u9053\u5199\u5165\u548C\u8BFB\u53D6\u7684\u6D41\uFF0C\u57FA\u672C\u4E0A\u76F8\u5BF9\u4E8E\u662F\u53EF\u8BFB\u6D41\u548C\u53EF\u5199\u6D41\u7684\u7EC4\u5408\u3002</li><li>Transform: \u7C7B\u4F3C\u4E8E\u53CC\u5DE5\u6D41\u3001\u4F46\u5176\u8F93\u51FA\u662F\u5176\u8F93\u5165\u7684\u8F6C\u6362\u7684\u8F6C\u6362\u6D41\u3002</li></ul><h3 id="\u5982\u4F55\u521B\u5EFA\u53EF\u8BFB\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u521B\u5EFA\u53EF\u8BFB\u6D41" aria-hidden="true">#</a> \u5982\u4F55\u521B\u5EFA\u53EF\u8BFB\u6D41</h3><p>\u4ECE stream \u6A21\u5757\u83B7\u53D6\u53EF\u8BFB\u6D41\uFF0C\u5BF9\u5176\u8FDB\u884C\u521D\u59CB\u5316\u5E76\u5B9E\u73B0 readable._read() \u65B9\u6CD5\u3002</p><p>\u9996\u5148\u521B\u5EFA\u6D41\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Stream <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> readableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Readable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7136\u540E\u5B9E\u73B0 _read\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>readableStream<span class="token punctuation">.</span><span class="token function-variable function">_read</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528 read \u9009\u9879\u5B9E\u73B0 _read\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> readableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Readable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u73B0\u5728\uFF0C\u6D41\u5DF2\u521D\u59CB\u5316\uFF0C\u53EF\u4EE5\u5411\u5176\u53D1\u9001\u6570\u636E\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>readableStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;hi!&#39;</span><span class="token punctuation">)</span>
readableStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;ho!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u5982\u4F55\u521B\u5EFA\u53EF\u5199\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u521B\u5EFA\u53EF\u5199\u6D41" aria-hidden="true">#</a> \u5982\u4F55\u521B\u5EFA\u53EF\u5199\u6D41</h3><p>\u82E5\u8981\u521B\u5EFA\u53EF\u5199\u6D41\uFF0C\u9700\u8981\u7EE7\u627F\u57FA\u672C\u7684 Writable \u5BF9\u8C61\uFF0C\u5E76\u5B9E\u73B0\u5176 _write() \u65B9\u6CD5\u3002</p><p>\u9996\u5148\u521B\u5EFA\u6D41\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Stream <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> writableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Writable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7136\u540E\u5B9E\u73B0 _write\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>writableStream<span class="token punctuation">.</span><span class="token function-variable function">_write</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> encoding<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u73B0\u5728\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u4F20\u8F93\u53EF\u8BFB\u6D41\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writableStream<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u5982\u4F55\u4ECE\u53EF\u8BFB\u6D41\u4E2D\u83B7\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u4ECE\u53EF\u8BFB\u6D41\u4E2D\u83B7\u53D6\u6570\u636E" aria-hidden="true">#</a> \u5982\u4F55\u4ECE\u53EF\u8BFB\u6D41\u4E2D\u83B7\u53D6\u6570\u636E</h3><p>\u5982\u4F55\u4ECE\u53EF\u8BFB\u6D41\u4E2D\u8BFB\u53D6\u6570\u636E\uFF1F \u4F7F\u7528\u53EF\u5199\u6D41\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Stream <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> readableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Readable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> writableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Writable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

writableStream<span class="token punctuation">.</span><span class="token function-variable function">_write</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> encoding<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

readableStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writableStream<span class="token punctuation">)</span>

readableStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;hi!&#39;</span><span class="token punctuation">)</span>
readableStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;ho!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528 readable \u4E8B\u4EF6\u76F4\u63A5\u5730\u6D88\u8D39\u53EF\u8BFB\u6D41\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>readableStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;readable&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>readableStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5982\u4F55\u53D1\u9001\u6570\u636E\u5230\u53EF\u5199\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u53D1\u9001\u6570\u636E\u5230\u53EF\u5199\u6D41" aria-hidden="true">#</a> \u5982\u4F55\u53D1\u9001\u6570\u636E\u5230\u53EF\u5199\u6D41</h3><p>\u4F7F\u7528\u6D41\u7684 write() \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>writableStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;hey!\\n&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u4F7F\u7528\u4FE1\u53F7\u901A\u77E5\u5DF2\u7ED3\u675F\u5199\u5165\u7684\u53EF\u5199\u6D41" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u4FE1\u53F7\u901A\u77E5\u5DF2\u7ED3\u675F\u5199\u5165\u7684\u53EF\u5199\u6D41" aria-hidden="true">#</a> \u4F7F\u7528\u4FE1\u53F7\u901A\u77E5\u5DF2\u7ED3\u675F\u5199\u5165\u7684\u53EF\u5199\u6D41</h3><p>\u4F7F\u7528 end() \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Stream <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> readableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Readable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> writableStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stream<span class="token punctuation">.</span>Writable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

writableStream<span class="token punctuation">.</span><span class="token function-variable function">_write</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> encoding<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

readableStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writableStream<span class="token punctuation">)</span>

readableStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;hi!&#39;</span><span class="token punctuation">)</span>
readableStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;ho!&#39;</span><span class="token punctuation">)</span>

writableStream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h2><h3 id="\u521B\u5EFA\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5F02\u5E38" aria-hidden="true">#</a> \u521B\u5EFA\u5F02\u5E38</h3><p>\u4F7F\u7528 throw \u5173\u952E\u5B57\u521B\u5EFA\u5F02\u5E38\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> value
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u9519\u8BEF\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5BF9\u8C61" aria-hidden="true">#</a> \u9519\u8BEF\u5BF9\u8C61</h3><p>\u9519\u8BEF\u5BF9\u8C61\u662F Error \u5BF9\u8C61\u7684\u5B9E\u4F8B\u3001\u6216\u8005\u7EE7\u627F\u81EA Error \u7C7B\uFF08\u7531 Error \u6838\u5FC3\u6A21\u5757\u63D0\u4F9B\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u4FE1\u606F&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">NotEnoughCoffeeError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotEnoughCoffeeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u5904\u7406\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u5F02\u5E38" aria-hidden="true">#</a> \u5904\u7406\u5F02\u5E38</h3><p>\u5F02\u5E38\u5904\u7406\u7A0B\u5E8F\u662F try/catch \u8BED\u53E5\u3002</p><p>try \u5757\u4E2D\u5305\u542B\u7684\u4EE3\u7801\u884C\u4E2D\u5F15\u53D1\u7684\u4EFB\u4F55\u5F02\u5E38\u90FD\u4F1A\u5728\u76F8\u5E94\u7684 catch \u5757\u4E2D\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u4EE3\u7801\u884C</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u6355\u83B7\u672A\u6355\u83B7\u7684\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u6355\u83B7\u672A\u6355\u83B7\u7684\u5F02\u5E38" aria-hidden="true">#</a> \u6355\u83B7\u672A\u6355\u83B7\u7684\u5F02\u5E38</h3><p>\u5982\u679C\u5728\u7A0B\u5E8F\u6267\u884C\u8FC7\u7A0B\u4E2D\u5F15\u53D1\u4E86\u672A\u6355\u83B7\u7684\u5F02\u5E38\uFF0C\u5219\u7A0B\u5E8F\u4F1A\u5D29\u6E83\u3002</p><p>\u82E5\u8981\u89E3\u51B3\u6B64\u95EE\u9898\uFF0C\u5219\u76D1\u542C process \u5BF9\u8C61\u4E0A\u7684 uncaughtException \u4E8B\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;uncaughtException&#39;</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u6709\u4E00\u4E2A\u672A\u6355\u83B7\u7684\u9519\u8BEF&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//\u5F3A\u5236\u6027\u7684\uFF08\u6839\u636E Node.js \u6587\u6863\uFF09</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="promise-\u7684\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u5F02\u5E38" aria-hidden="true">#</a> Promise \u7684\u5F02\u5E38</h3><p>\u4F7F\u7528 promise \u53EF\u4EE5\u94FE\u63A5\u4E0D\u540C\u7684\u64CD\u4F5C\uFF0C\u5E76\u5728\u6700\u540E\u5904\u7406\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">doSomething1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>doSomething2<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>doSomething3<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="async-await-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#async-await-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> async/await \u7684\u9519\u8BEF\u5904\u7406</h3><p>\u4F7F\u7528 async/await \u65F6\uFF0C\u4ECD\u7136\u9700\u8981\u6355\u83B7\u9519\u8BEF\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u8FDB\u884C\u64CD\u4F5C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">someOtherFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u591A\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u591A\u8FDB\u7A0B" aria-hidden="true">#</a> \u591A\u8FDB\u7A0B</h2><p>Node.js \u662F\u4EE5\u5355\u7EBF\u7A0B\u7684\u6A21\u5F0F\u8FD0\u884C\u7684\uFF0C\u4F46\u5B83\u4F7F\u7528\u7684\u662F\u4E8B\u4EF6\u9A71\u52A8\u6765\u5904\u7406\u5E76\u53D1\uFF0C\u8FD9\u6837\u6709\u52A9\u4E8E\u6211\u4EEC\u5728\u591A\u6838 cpu \u7684\u7CFB\u7EDF\u4E0A\u521B\u5EFA\u591A\u4E2A\u5B50\u8FDB\u7A0B\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6027\u80FD\u3002</p><p>\u6BCF\u4E2A\u5B50\u8FDB\u7A0B\u603B\u662F\u5E26\u6709\u4E09\u4E2A\u6D41\u5BF9\u8C61\uFF1Achild.stdin, child.stdout \u548Cchild.stderr\u3002\u4ED6\u4EEC\u53EF\u80FD\u4F1A\u5171\u4EAB\u7236\u8FDB\u7A0B\u7684 stdio \u6D41\uFF0C\u6216\u8005\u4E5F\u53EF\u4EE5\u662F\u72EC\u7ACB\u7684\u88AB\u5BFC\u6D41\u7684\u6D41\u5BF9\u8C61\u3002</p><p>Node \u63D0\u4F9B\u4E86 child_process \u6A21\u5757\u6765\u521B\u5EFA\u5B50\u8FDB\u7A0B\uFF0C\u65B9\u6CD5\u6709\uFF1A</p><ul><li>exec - child_process.exec \u4F7F\u7528\u5B50\u8FDB\u7A0B\u6267\u884C\u547D\u4EE4\uFF0C\u7F13\u5B58\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\uFF0C\u5E76\u5C06\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\u4EE5\u56DE\u8C03\u51FD\u6570\u53C2\u6570\u7684\u5F62\u5F0F\u8FD4\u56DE\u3002</li><li>spawn - child_process.spawn \u4F7F\u7528\u6307\u5B9A\u7684\u547D\u4EE4\u884C\u53C2\u6570\u521B\u5EFA\u65B0\u8FDB\u7A0B\u3002</li><li>fork - child_process.fork \u662F spawn()\u7684\u7279\u6B8A\u5F62\u5F0F\uFF0C\u7528\u4E8E\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C\u7684\u6A21\u5757\uFF0C\u5982 fork(&#39;./son.js&#39;) \u76F8\u5F53\u4E8E spawn(&#39;node&#39;, [&#39;./son.js&#39;]) \u3002\u4E0Espawn\u65B9\u6CD5\u4E0D\u540C\u7684\u662F\uFF0Cfork\u4F1A\u5728\u7236\u8FDB\u7A0B\u4E0E\u5B50\u8FDB\u7A0B\u4E4B\u95F4\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u901A\u4FE1\u7BA1\u9053\uFF0C\u7528\u4E8E\u8FDB\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1\u3002</li></ul><h3 id="exec-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#exec-\u65B9\u6CD5" aria-hidden="true">#</a> exec() \u65B9\u6CD5</h3><p>child_process.exec \u4F7F\u7528\u5B50\u8FDB\u7A0B\u6267\u884C\u547D\u4EE4\uFF0C\u7F13\u5B58\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\uFF0C\u5E76\u5C06\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\u4EE5\u56DE\u8C03\u51FD\u6570\u53C2\u6570\u7684\u5F62\u5F0F\u8FD4\u56DE\u3002</p><p>\u8BED\u6CD5\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>child_process<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>command<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a> \u53C2\u6570</h4><ul><li><p>command\uFF1A \u5B57\u7B26\u4E32\uFF0C \u5C06\u8981\u8FD0\u884C\u7684\u547D\u4EE4\uFF0C\u53C2\u6570\u4F7F\u7528\u7A7A\u683C\u9694\u5F00</p></li><li><p>options \uFF1A\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u662F\uFF1A</p><ul><li>cwd \uFF0C\u5B57\u7B26\u4E32\uFF0C\u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55</li><li>env\uFF0C\u5BF9\u8C61 \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9</li><li>encoding \uFF0C\u5B57\u7B26\u4E32\uFF0C\u5B57\u7B26\u7F16\u7801\uFF08\u9ED8\u8BA4\uFF1A &#39;utf8&#39;\uFF09</li><li>shell \uFF0C\u5B57\u7B26\u4E32\uFF0C\u5C06\u8981\u6267\u884C\u547D\u4EE4\u7684 Shell\uFF08\u9ED8\u8BA4: \u5728 UNIX \u4E2D\u4E3A/bin/sh\uFF0C \u5728 Windows \u4E2D cmd.exe\uFF0C Shell \u5E94\u5F53\u80FD\u8BC6\u522B -c\u5F00\u5173\u5728 UNIX \u4E2D\uFF0C\u6216 /s /c \u5728 Windows \u4E2D\u3002 \u5728Windows \u4E2D\uFF0C\u547D\u4EE4\u89E3\u6790\u5E94\u5F53\u80FD\u517C\u5BB9cmd.exe\uFF09</li><li>timeout\uFF0C\u6570\u5B57\uFF0C\u8D85\u65F6\u65F6\u95F4\uFF08\u9ED8\u8BA4\uFF1A 0\uFF09</li><li>maxBuffer\uFF0C\u6570\u5B57\uFF0C \u5728 stdout \u6216 stderr \u4E2D\u5141\u8BB8\u5B58\u5728\u7684\u6700\u5927\u7F13\u51B2\uFF08\u4E8C\u8FDB\u5236\uFF09\uFF0C\u5982\u679C\u8D85\u51FA\u90A3\u4E48\u5B50\u8FDB\u7A0B\u5C06\u4F1A\u88AB\u6740\u6B7B \uFF08\u9ED8\u8BA4: 200*1024\uFF09</li><li>killSignal \uFF0C\u5B57\u7B26\u4E32\uFF0C\u7ED3\u675F\u4FE1\u53F7\uFF08\u9ED8\u8BA4\uFF1A&#39;SIGTERM&#39;\uFF09</li><li>uid\uFF0C\u6570\u5B57\uFF0C\u8BBE\u7F6E\u7528\u6237\u8FDB\u7A0B\u7684 ID</li><li>gid\uFF0C\u6570\u5B57\uFF0C\u8BBE\u7F6E\u8FDB\u7A0B\u7EC4\u7684 ID</li></ul></li><li><p>callback \uFF1A\u56DE\u8C03\u51FD\u6570\uFF0C\u5305\u542B\u4E09\u4E2A\u53C2\u6570error, stdout \u548C stderr\u3002</p></li></ul><blockquote><p>exec() \u65B9\u6CD5\u8FD4\u56DE\u6700\u5927\u7684\u7F13\u51B2\u533A\uFF0C\u5E76\u7B49\u5F85\u8FDB\u7A0B\u7ED3\u675F\uFF0C\u4E00\u6B21\u6027\u8FD4\u56DE\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u3002</p></blockquote><h4 id="\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a> \u5B9E\u4F8B</h4>`,374),j=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" child_process "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'child_process'"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" workerProcess "),n("span",{class:"token operator"},"="),s(" child_process"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'node ./child.js '"),n("span",{class:"token operator"},"+"),s("i"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("err"),n("span",{class:"token punctuation"},","),s(" stdout"),n("span",{class:"token punctuation"},","),s(" stderr")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("stack"),n("span",{class:"token punctuation"},")"),s(`
            console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Error code: '"),n("span",{class:"token operator"},"+"),s("err"),n("span",{class:"token punctuation"},"."),s("code"),n("span",{class:"token punctuation"},")"),s(`
            console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Signal received: '"),n("span",{class:"token operator"},"+"),s("err"),n("span",{class:"token punctuation"},"."),s("signal"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'stdout: '"),s(),n("span",{class:"token operator"},"+"),s(" stdout"),n("span",{class:"token punctuation"},")"),s(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'stderr: '"),s(),n("span",{class:"token operator"},"+"),s(" stderr"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`

    workerProcess`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'exit'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token parameter"},"code"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'\u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 '"),n("span",{class:"token operator"},"+"),s("code"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0"),s(`
`),n("span",{class:"token comment"},"// stdout: \u8FDB\u7A0B0\u6267\u884C\u3002"),s(`

`),n("span",{class:"token comment"},"// stderr:"),s(`
`),n("span",{class:"token comment"},"// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0"),s(`
`),n("span",{class:"token comment"},"// stdout: \u8FDB\u7A0B2\u6267\u884C\u3002"),s(`

`),n("span",{class:"token comment"},"// stderr:"),s(`
`),n("span",{class:"token comment"},"// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0"),s(`
`),n("span",{class:"token comment"},"// stdout: \u8FDB\u7A0B1\u6267\u884C\u3002"),s(`

`),n("span",{class:"token comment"},"// stderr:"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br")])],-1),x=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[s("console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'\u8FDB\u7A0B'"),s(),n("span",{class:"token operator"},"+"),s(" process"),n("span",{class:"token punctuation"},"."),s("argv"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},"'\u6267\u884C\u3002'"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),w=o(`<h3 id="spawn-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#spawn-\u65B9\u6CD5" aria-hidden="true">#</a> spawn() \u65B9\u6CD5</h3><p>child_process.spawn \u4F7F\u7528\u6307\u5B9A\u7684\u547D\u4EE4\u884C\u53C2\u6570\u521B\u5EFA\u65B0\u8FDB\u7A0B\uFF0C\u8BED\u6CD5\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>child_process<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span>command<span class="token punctuation">[</span><span class="token punctuation">,</span> args<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="\u53C2\u6570-1" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570-1" aria-hidden="true">#</a> \u53C2\u6570</h4><p>\u53C2\u6570\u8BF4\u660E\u5982\u4E0B\uFF1A</p><ul><li><p>command\uFF1A \u5C06\u8981\u8FD0\u884C\u7684\u547D\u4EE4</p></li><li><p>args\uFF1A Array \u5B57\u7B26\u4E32\u53C2\u6570\u6570\u7EC4</p></li><li><p>options Object</p><ul><li>cwd String \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55</li><li>env Object \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9</li><li>stdio Array|String \u5B50\u8FDB\u7A0B\u7684 stdio \u914D\u7F6E</li><li>detached Boolean \u8FD9\u4E2A\u5B50\u8FDB\u7A0B\u5C06\u4F1A\u53D8\u6210\u8FDB\u7A0B\u7EC4\u7684\u9886\u5BFC</li><li>uid Number \u8BBE\u7F6E\u7528\u6237\u8FDB\u7A0B\u7684 ID</li><li>gid Number \u8BBE\u7F6E\u8FDB\u7A0B\u7EC4\u7684 ID</li></ul></li></ul><blockquote><p>spawn() \u65B9\u6CD5\u8FD4\u56DE\u6D41 (stdout &amp; stderr)\uFF0C\u5728\u8FDB\u7A0B\u8FD4\u56DE\u5927\u91CF\u6570\u636E\u65F6\u4F7F\u7528\u3002\u8FDB\u7A0B\u4E00\u65E6\u5F00\u59CB\u6267\u884Cspawn() \u5C31\u5F00\u59CB\u63A5\u6536\u54CD\u5E94\u3002</p></blockquote><h4 id="\u5B9E\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-1" aria-hidden="true">#</a> \u5B9E\u4F8B</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> child_process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> workerProcess <span class="token operator">=</span> child_process<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;child.js&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span>

    workerProcess<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stdout: &#39;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    workerProcess<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stderr: &#39;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    workerProcess<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token parameter">code</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 &#39;</span><span class="token operator">+</span>code<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// stdout: \u8FDB\u7A0B0\u6267\u884C\u3002</span>

<span class="token comment">// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0</span>
<span class="token comment">// stdout: \u8FDB\u7A0B1\u6267\u884C\u3002</span>

<span class="token comment">// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0</span>
<span class="token comment">// stdout: \u8FDB\u7A0B2\u6267\u884C\u3002</span>

<span class="token comment">// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="fork-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#fork-\u65B9\u6CD5" aria-hidden="true">#</a> fork \u65B9\u6CD5</h3><p>child_process.fork \u662F spawn() \u65B9\u6CD5\u7684\u7279\u6B8A\u5F62\u5F0F\uFF0C\u7528\u4E8E\u521B\u5EFA\u8FDB\u7A0B\uFF0C\u8BED\u6CD5\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>child_process<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span>modulePath<span class="token punctuation">[</span><span class="token punctuation">,</span> args<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="\u53C2\u6570-2" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570-2" aria-hidden="true">#</a> \u53C2\u6570</h4><p>\u53C2\u6570\u8BF4\u660E\u5982\u4E0B\uFF1A</p><ul><li><p>modulePath\uFF1A String\uFF0C\u5C06\u8981\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C\u7684\u6A21\u5757</p></li><li><p>args\uFF1A Array \u5B57\u7B26\u4E32\u53C2\u6570\u6570\u7EC4</p></li><li><p>options\uFF1AObject</p><ul><li>cwd String \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55</li><li>env Object \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9</li><li>execPath String \u521B\u5EFA\u5B50\u8FDB\u7A0B\u7684\u53EF\u6267\u884C\u6587\u4EF6</li><li>execArgv Array \u5B50\u8FDB\u7A0B\u7684\u53EF\u6267\u884C\u6587\u4EF6\u7684\u5B57\u7B26\u4E32\u53C2\u6570\u6570\u7EC4\uFF08\u9ED8\u8BA4\uFF1A process.execArgv\uFF09</li><li>silent Boolean \u5982\u679C\u4E3Atrue\uFF0C\u5B50\u8FDB\u7A0B\u7684stdin\uFF0Cstdout\u548Cstderr\u5C06\u4F1A\u88AB\u5173\u8054\u81F3\u7236\u8FDB\u7A0B\uFF0C\u5426\u5219\uFF0C\u5B83\u4EEC\u5C06\u4F1A\u4ECE\u7236\u8FDB\u7A0B\u4E2D\u7EE7\u627F\u3002\uFF08\u9ED8\u8BA4\u4E3A\uFF1Afalse\uFF09</li><li>uid Number \u8BBE\u7F6E\u7528\u6237\u8FDB\u7A0B\u7684 ID</li><li>gid Number \u8BBE\u7F6E\u8FDB\u7A0B\u7EC4\u7684 ID</li></ul></li></ul><blockquote><p>\u8FD4\u56DE\u7684\u5BF9\u8C61\u9664\u4E86\u62E5\u6709ChildProcess\u5B9E\u4F8B\u7684\u6240\u6709\u65B9\u6CD5\uFF0C\u8FD8\u6709\u4E00\u4E2A\u5185\u5EFA\u7684\u901A\u4FE1\u4FE1\u9053\u3002</p></blockquote><h4 id="\u5B9E\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-2" aria-hidden="true">#</a> \u5B9E\u4F8B</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> child_process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> workerProcess <span class="token operator">=</span> child_process<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;child.js&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

    workerProcess<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token parameter">code</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 &#39;</span><span class="token operator">+</span>code<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FDB\u7A0B0\u6267\u884C\u3002</span>
<span class="token comment">// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0</span>
<span class="token comment">// \u8FDB\u7A0B1\u6267\u884C\u3002</span>
<span class="token comment">// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0</span>
<span class="token comment">// \u8FDB\u7A0B2\u6267\u884C\u3002</span>
<span class="token comment">// \u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA\uFF0C\u9000\u51FA\u7801 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,18);function y(q,S){const c=p("ExternalLinkIcon"),e=p("CodeGroup"),l=p("CodeGroupItem");return u(),r(k,null,[n("h1",b,[m,h,n("a",g,[f,a(c)])]),v,a(e,null,{default:t(()=>[a(e,null,{default:t(()=>[j]),_:1}),a(l,{title:"child.js"},{default:t(()=>[x]),_:1})]),_:1}),w],64)}var _=i(d,[["render",y]]);export{_ as default};
