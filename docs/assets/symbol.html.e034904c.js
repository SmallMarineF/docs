import{_ as n,f as s}from"./app.feea1f18.js";const a={},p=s(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><h2 id="\u57FA\u7840\u77E5\u8BC6" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u77E5\u8BC6" aria-hidden="true">#</a> \u57FA\u7840\u77E5\u8BC6</h2><h3 id="\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E" aria-hidden="true">#</a> \u58F0\u660E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mk <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> mk2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mk <span class="token operator">==</span> mk2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>Symbol \u4E0D\u53EF\u4EE5\u6DFB\u52A0\u5C5E\u6027</p></blockquote><h3 id="\u63CF\u8FF0\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u63CF\u8FF0\u53C2\u6570" aria-hidden="true">#</a> \u63CF\u8FF0\u53C2\u6570</h3><p>\u53EF\u4F20\u5165\u5B57\u7B26\u4E32\u7528\u4E8E\u63CF\u8FF0Symbol\uFF0C\u65B9\u4FBF\u5728\u63A7\u5236\u53F0\u5206\u8FA8Symbol</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mk <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528description\u53EF\u4EE5\u83B7\u53D6\u4F20\u5165\u7684\u63CF\u8FF0\u53C2\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mk<span class="token punctuation">.</span>description<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>\u4F20\u5165\u76F8\u540C\u53C2\u6570Symbol\u4E5F\u662F\u72EC\u7ACB\u552F\u4E00\u7684\uFF0C\u56E0\u4E3A\u53C2\u6570\u53EA\u662F\u63CF\u8FF0\u800C\u5DF2\uFF0C\u4F46\u4F7F\u7528 Symbol.for\u5219\u4E0D\u4F1A</p></blockquote><h3 id="symbol-for" tabindex="-1"><a class="header-anchor" href="#symbol-for" aria-hidden="true">#</a> Symbol.for</h3><p>\u6839\u636E\u63CF\u8FF0\u83B7\u53D6Symbol\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u65B0\u5EFA\u4E00\u4E2ASymbol</p><ul><li>\u4F7F\u7528Symbol.for\u4F1A\u5728\u7CFB\u7EDF\u4E2D\u5C06Symbol\u767B\u8BB0</li><li>\u4F7F\u7528Symbol\u5219\u4E0D\u4F1A\u767B\u8BB0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mk <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> mk2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mk <span class="token operator">===</span> mk2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="symbol-keyfor" tabindex="-1"><a class="header-anchor" href="#symbol-keyfor" aria-hidden="true">#</a> Symbol.keyFor</h3><p>Symbol.keyFor \u6839\u636E\u4F7F\u7528Symbol.for\u767B\u8BB0\u7684Symbol\u8FD4\u56DE\u63CF\u8FF0\uFF0C\u5982\u679C\u627E\u4E0D\u5230\u8FD4\u56DEundefined \u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mk <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>mk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// mkimq</span>

<span class="token keyword">const</span> mk2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>mk2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> \u5BF9\u8C61\u5C5E\u6027</h3><p>Symbol \u662F\u72EC\u4E00\u65E0\u4E8C\u7684\u6240\u4EE5\u53EF\u4EE5\u4FDD\u8BC1\u5BF9\u8C61\u5C5E\u6027\u7684\u552F\u4E00\u3002</p><ul><li>Symbol \u58F0\u660E\u548C\u8BBF\u95EE\u4F7F\u7528 []\uFF08\u53D8\u91CF\uFF09\u5F62\u5F0F\u64CD\u4F5C</li><li>\u4E5F\u4E0D\u80FD\u4F7F\u7528 . \u8BED\u6CD5\u56E0\u4E3A .\u8BED\u6CD5\u662F\u64CD\u4F5C\u5B57\u7B26\u4E32\u5C5E\u6027\u7684\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;mkimq.com&#39;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u5B9E\u4F8B\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u64CD\u4F5C" aria-hidden="true">#</a> \u5B9E\u4F8B\u64CD\u4F5C</h2><h3 id="\u7F13\u5B58\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7F13\u5B58\u64CD\u4F5C" aria-hidden="true">#</a> \u7F13\u5B58\u64CD\u4F5C</h3><p>\u4F7F\u7528Symbol\u53EF\u4EE5\u89E3\u51B3\u5728\u4FDD\u5B58\u6570\u636E\u65F6\u7531\u4E8E\u540D\u79F0\u76F8\u540C\u9020\u6210\u7684\u8026\u5408\u8986\u76D6\u95EE\u9898\u3002</p><h3 id="\u904D\u5386\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u5C5E\u6027" aria-hidden="true">#</a> \u904D\u5386\u5C5E\u6027</h3><p>Symbol \u4E0D\u80FD\u4F7F\u7528 for/in\u3001for/of \u904D\u5386\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;mkimq&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;mkimq.com&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;mkimq&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53EF\u4EE5\u4F7F\u7528 Object.getOwnPropertySymbols \u83B7\u53D6\u6240\u6709Symbol\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528 Reflect.ownKeys(obj) \u83B7\u53D6\u6240\u6709\u5C5E\u6027\u5305\u62ECSymbol</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u5982\u679C\u5BF9\u8C61\u5C5E\u6027\u4E0D\u60F3\u88AB\u904D\u5386\uFF0C\u53EF\u4EE5\u4F7F\u7528Symbol\u4FDD\u62A4</p></blockquote>`,31);function e(o,t){return p}var l=n(a,[["render",e]]);export{l as default};
